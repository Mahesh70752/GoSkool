@{
    ViewData["Title"] = "Bus Route";
}

@model GoSkool.DTO.DriverDTO;


<div class="container">
    <h3>Bus location</h3>
    <div class="row justify-content-center">
        @if (Model.driving)
        {
            <a asp-action="RouteMap" asp-route-driving="@false" class="btn btn-danger col-3">Stop</a>
        }
        else
        {
            <a asp-action="RouteMap" asp-route-driving="@true" class="btn btn-primary col-3">Start</a>
        }

    </div>
</div>
<div id="map" class="w-100"></div>

<style>
    #map{
    height: 800px;
    }
</style>

<script type="text/javascript">
    // Note: This example requires that you consent to location sharing when
    // prompted by your browser. If you see the error "The Geolocation service
    // failed.", it means you probably did not give permission for the browser to
    // locate you.
    let map, infoWindow;

    function initMap() {
    map = new google.maps.Map(document.getElementById("map"), {
    center: { lat: -34.397, lng: 150.644 },
    zoom: 6,
    });
    infoWindow = new google.maps.InfoWindow();

    function postLocation(){
    if(navigator.geolocation){
    navigator.geolocation.getCurrentPosition(
    (pos) => {
    $.ajax({
    url: 'https://7l2ncnf2-5084.inc1.devtunnels.ms/driver/savelocation',
    type: 'POST',
    contentType: 'application/json',
    data: JSON.stringify({BusNumber:@Model.BusNumber, latitude: pos.coords.latitude.toString(),longitude:pos.coords.longitude.toString()})
    })
    }
    );
    }
    }

    @if (Model.driving)
    {
        Console.WriteLine("Started Driving the bus");
        <text>
            window.setInterval(postLocation,5000);
        </text>
    }
    else
    {
        Console.WriteLine("Stopped the bus");
    }


        const locationButton = document.createElement("button");

        locationButton.textContent = "Get all my traveled locations";
        locationButton.classList.add("custom-map-control-button");
        map.controls[google.maps.ControlPosition.TOP_CENTER].push(locationButton);
        locationButton.addEventListener("click", () => {
    
            @for(var j = 0; j < Model.lats.Count; j++)
            {
                <text>
                    const point = { lat: parseFloat(@Model.lats[j]), lng: parseFloat(@Model.lngs[j]) };
                          const marker = new google.maps.Marker({
                            position: point,
                            title: "My Point",
                            map: map,
                          });
                </text>                   
            
            }
            // Try HTML5 geolocation.
            if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(
                (position) => {
              
                    const pos = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude,
                    };


                    infoWindow.setPosition(pos);
                    infoWindow.setContent("Location found.");
                    infoWindow.open(map);
                    map.setCenter(pos);
                },
                () => {
                    handleLocationError(true, infoWindow, map.getCenter());
                    },
                );
            } else {
                // Browser doesn't support Geolocation
                handleLocationError(false, infoWindow, map.getCenter());
            }
        });
    }

    function handleLocationError(browserHasGeolocation, infoWindow, pos) {
      infoWindow.setPosition(pos);
      infoWindow.setContent(
        browserHasGeolocation
          ? "Error: The Geolocation service failed."
          : "Error: Your browser doesn't support geolocation.",
      );
      infoWindow.open(map);
    }

    window.initMap = initMap;
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDZC5SW9-cYkUAHC6dlM8R0y7UrVBgReFk&callback=initMap" async defer></script>
